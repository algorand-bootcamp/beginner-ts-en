{
  "hints": {
    "createApplication(string,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "bootstrap()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "register(asset)void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "deregister(asset)void": {
      "call_config": {
        "close_out": "CALL"
      }
    },
    "vote(bool,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getProposal()string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getRegisteredASA()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotes()(uint64,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "inFavor": {
          "type": "bytes",
          "key": "inFavor"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "registeredAsaId": {
          "type": "uint64",
          "key": "registeredAsaId"
        },
        "proposal": {
          "type": "bytes",
          "key": "p"
        },
        "endVoting": {
          "type": "uint64",
          "key": "endVoting"
        },
        "votesTotal": {
          "type": "uint64",
          "key": "votesTotal"
        },
        "votesInFavor": {
          "type": "uint64",
          "key": "votesInFavor"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 1,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKLy8gY29udHJhY3RzL2Rhby5hbGdvLnRzOjc5Ci8vIHRoaXMuZm9yZ2V0Vm90ZSgpCmNhbGxzdWIgZm9yZ2V0Vm90ZQppbnQgMQpyZXR1cm4KCmZvcmdldFZvdGU6Cglwcm90byAwIDAKCgkvLyBpZjNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvZGFvLmFsZ28udHM6NTYKCS8vIHRoaXMuaW5GYXZvcih0aGlzLnR4bi5zZW5kZXIpLmV4aXN0cwoJdHhuIFNlbmRlcgoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYnl0ZSAiaW5GYXZvciIKCWFwcF9sb2NhbF9nZXRfZXgKCXN3YXAKCXBvcAoJYnogaWYzX2VuZAoKCS8vIGlmM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvZGFvLmFsZ28udHM6NTcKCS8vIHRoaXMudm90ZXNUb3RhbC52YWx1ZSA9IHRoaXMudm90ZXNUb3RhbC52YWx1ZSAtIDEKCWJ5dGUgInZvdGVzVG90YWwiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZSAidm90ZXNUb3RhbCIKCWJ5dGUgInZvdGVzVG90YWwiCglhcHBfZ2xvYmFsX2dldAoJaW50IDEKCS0KCWFwcF9nbG9iYWxfcHV0CgoJLy8gaWY0X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL2Rhby5hbGdvLnRzOjU4CgkvLyB0aGlzLmluRmF2b3IodGhpcy50eG4uc2VuZGVyKS52YWx1ZQoJdHhuIFNlbmRlcgoJYnl0ZSAiaW5GYXZvciIKCWFwcF9sb2NhbF9nZXQKCWludCAwCglnZXRiaXQKCWJ6IGlmNF9lbmQKCgkvLyBpZjRfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL2Rhby5hbGdvLnRzOjU5CgkvLyB0aGlzLnZvdGVzSW5GYXZvci52YWx1ZSA9IHRoaXMudm90ZXNJbkZhdm9yLnZhbHVlIC0gMQoJYnl0ZSAidm90ZXNJbkZhdm9yIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGUgInZvdGVzSW5GYXZvciIKCWJ5dGUgInZvdGVzSW5GYXZvciIKCWFwcF9nbG9iYWxfZ2V0CglpbnQgMQoJLQoJYXBwX2dsb2JhbF9wdXQKCmlmNF9lbmQ6CgppZjNfZW5kOgoJcmV0c3Vi"
  },
  "contract": {
    "name": "Dao",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "proposal",
            "type": "string",
            "desc": ""
          },
          {
            "name": "endVoting",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "bootstrap",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "register",
        "args": [
          {
            "name": "registeredASA",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "deregister",
        "args": [
          {
            "name": "registeredASA",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "vote",
        "args": [
          {
            "name": "inFavor",
            "type": "bool",
            "desc": ""
          },
          {
            "name": "registeredASA",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getProposal",
        "args": [],
        "desc": "",
        "returns": {
          "type": "string",
          "desc": ""
        }
      },
      {
        "name": "getRegisteredASA",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getVotes",
        "args": [],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64)",
          "desc": ""
        }
      }
    ]
  }
}